package com.employee.app.service.user;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.AuthenticationUserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.employee.app.model.auth.User;

@Service
public class CasUserDetailsService implements AuthenticationUserDetailsService {

	private static final Logger LOGGER = LoggerFactory.getLogger(CurrentUserDetailsService.class);
	private final UserService userService;

	@Autowired
	public CasUserDetailsService(UserService userService) {
		this.userService = userService;
	}

	@Override
	public CurrentUser loadUserDetails(Authentication token) throws UsernameNotFoundException {
		// TODO Have to add the validation for the token generated by CAS.

		String login = token.getName();
		User user = null;
		// log.debug("Authenticating '{}'", login);
		List<GrantedAuthority> grantedAuthorities = new ArrayList<GrantedAuthority>();
		try {
			user = userService.getUserByEmailAddress(login);
			if (user == null) {
				// TODO : Have to add code to create a new user with this name
				// with the default role.
				new UsernameNotFoundException(String.format("User with email=%s was not found", login));
			}

		} catch (Exception e) {
			new UsernameNotFoundException(String.format("User with email=%s was not found", login));
		}
		return new CurrentUser(user);
	}

}
